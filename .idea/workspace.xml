<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="3ae7b0c7-a661-45f0-ab46-5dbab5a528e6" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/../../../clean/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/app/commands/clean.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/app/module.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/bootstrap/bootstrap.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/bootstrap/root.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/config.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/config/option.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/config/register.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../clean/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/http/middleware/security.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/http/middleware/security_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../mtasks/repository/impl/app_dao_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/cmd/expr.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/cmd/expr_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/cmd/flag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/cmd/pflag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/cmd/root.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/cmd/viper.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/config.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/pb/score.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/rule/dto/dto.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/rule/dto/dto_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-heard/rule/entity/rule.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-middleware/.idea/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-middleware/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-middleware/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-middleware/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-middleware/http/security/init.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../go-middleware/http/security/security.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/api/score/score.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/app/score/repository/migrator.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/app/score/repository/repos.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/bootstrap/bootstrap.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/bootstrap/option.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/bootstrap/register.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/cmd/root.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/config.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/generate.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/errors/errors.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/gogoproto/gogo.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/google/api/http.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/protoc-gen-openapiv2/options/annotations.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/protoc-gen-openapiv2/options/openapiv2.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/protoc-gen-validate/go.sum" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/protoc-gen-validate/validate/validate.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/validate/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../score-hub/third_party/validate/validate.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../wz-proto/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../wz-proto/base/base.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../wz-proto/jwt/claim.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../wz-proto/readme.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../wz-proto/score/v2/score.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../yanghp/deposit/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../yanghp/event/dispatcher/dispatcher.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../yanghp/promises/promise.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../yanghp/wechat/pay.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../yanghp_go/gogit/git.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../yanghp_go/gogit/git_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../yanghp_go/tmpl/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../../yanghp_go/tmpl/network.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame-master/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/MP_verify_oSClQLOUTyzPRg6o.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/conf/app.conf" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/controllers/Authentication.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/controllers/demo.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/def/def.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/filter/filter.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/go.mod" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/go.sum" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/main.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/models/gorm.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/models/tables.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/routers/router.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/static/js/jquery-3.1.1.min.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/static/js/jweixin-1.2.0.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/static/js/reload.min.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/static/js/sha1.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/tests/default_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/util/map2xml.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/util/util.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/util/weixin_pay_util.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/util/zhifubao_util.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../ChickGame/views/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/app/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/app/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/app/wire.go" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/app/wire.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/configs/dev.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/configs/dev.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/configs/prod.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/configs/prod.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/model/rule.go" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/model/rule.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/pb/envent.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/pb/envent.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/pb/envent.proto" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/pb/envent.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/pkg/kafka.go" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/pkg/kafka.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../etasks/readme.md" beforeDir="false" afterPath="$PROJECT_DIR$/../etasks/readme.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../luck_score/app/wire.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../luck_score/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/../luck_score/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../luck_score/configs/dev.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../luck_score/configs/dev.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../luck_score/lib/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/../luck_score/lib/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../luck_score/model/remote.go" beforeDir="false" afterPath="$PROJECT_DIR$/../luck_score/model/remote.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/app/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/app/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/app/wire.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/app/wire.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/app/wire_gen.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/app/wire_gen.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/code/code.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/configs/conf.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/configs/conf.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/configs/conf_pro.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/configs/conf_pro.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/gin/gin.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/gin/gin.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/gin/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/gin/router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/handlers/app_controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/handlers/app_controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/handlers/controllers.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/handlers/controllers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/handlers/deposit_controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/handlers/deposit_controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/handlers/score_controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/handlers/score_controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/handlers/sign_controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/handlers/sign_controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/handlers/task_controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/handlers/task_controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/middleware/jwt.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/model/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/model/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/model/claims.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/model/claims.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/model/deposit.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/model/deposit.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/model/model_easyjson.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/model/model_easyjson.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/model/score.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/model/score.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/model/sign.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/model/sign.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/model/task.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/model/task.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/pb/payment.pb.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/pb/payment.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/repository/impl/app_dao.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/repository/impl/app_dao.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/repository/impl/deposit_dao.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/repository/impl/deposit_dao.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/repository/impl/keys.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/repository/impl/keys.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/repository/impl/lock_dao.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/repository/impl/lock_dao.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/repository/impl/process_dao.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/repository/impl/process_dao.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/repository/impl/score_dao.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/repository/impl/score_dao.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/repository/impl/sign_dao.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/repository/impl/sign_dao.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/repository/impl/task_dao.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/repository/impl/task_dao.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/repository/interfaces.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/repository/interfaces.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/response/resp.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/services/impl/app_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/services/impl/app_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/services/impl/deposit_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/services/impl/deposit_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/services/impl/score_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/services/impl/score_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/services/impl/sign_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/services/impl/sign_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/services/impl/task_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/services/impl/task_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/services/interfaces.go" beforeDir="false" afterPath="$PROJECT_DIR$/../mtasks/services/interfaces.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mtasks/services/pay_service.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../walk/pb/reach.proto" beforeDir="false" afterPath="$PROJECT_DIR$/../walk/pb/reach.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../rebirth/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../rebirth/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../rebirth/.idea/.name" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../rebirth/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../rebirth/.idea/rebirth.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../rebirth/app/pb/rebirth.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../rebirth/main.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../rebirth/readme.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/pb/google/api/annotations.proto" beforeDir="false" afterPath="$PROJECT_DIR$/../../../score-hub/third_party/google/api/annotations.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/pb/google/api/http.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/pb/google/api/httpbody.proto" beforeDir="false" afterPath="$PROJECT_DIR$/../../../score-hub/third_party/google/api/httpbody.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/pb/google/rpc/code.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/pb/google/rpc/error_details.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/pb/google/rpc/status.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/favicon-16x16.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/favicon-32x32.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/oauth2-redirect.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui-bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui-bundle.js.map" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui-es-bundle-core.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui-es-bundle-core.js.map" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui-es-bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui-es-bundle.js.map" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui-standalone-preset.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui-standalone-preset.js.map" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui.css.map" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp/swagger/swagger-ui.js.map" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../../yanghp_go/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/../../../yanghp_go/main.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">
    <option name="context" value="kubernetes-admin@kubernetes" />
    <option name="namespace" value="default" />
  </component>
  <component name="ProjectId" id="1zlQkdCL3qVKsHNWMuoosyW5cPD" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/http/middleware" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>